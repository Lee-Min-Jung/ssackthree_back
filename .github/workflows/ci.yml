name: deploy

on:
  release:
    types: [push]
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash

      - name: Create application.properties
        run: |
          mkdir -p src/main/resources
          echo "spring.datasource.url=jdbc:mysql://13.124.14.22:3306/ssackthree?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul" >> src/main/resources/application.properties
          echo "spring.datasource.username=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> src/main/resources/application.properties
          echo "spring.datasource.password=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> src/main/resources/application.properties
          echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> src/main/resources/application.properties
          echo "spring.jpa.show-sql=true" >> src/main/resources/application.properties
          echo "spring.jpa.properties.hibernate.format_sql=true" >> src/main/resources/application.properties
          echo "spring.jpa.hibernate.ddl-auto=update" >> src/main/resources/application.properties
          echo "spring.jpa.database=mysql" >> src/main/resources/application.properties
          echo "spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect" >> src/main/resources/application.properties
          echo "spring.jpa.generate-ddl=true" >> src/main/resources/application.properties
          echo "spring.servlet.multipart.enabled=true" >> src/main/resources/application.properties
          echo "spring.servlet.multipart.file-size-threshold=2KB" >> src/main/resources/application.properties
          echo "spring.servlet.multipart.max-file-size: 100MB" >> src/main/resources/application.properties
          echo "spring.servlet.multipart.max-request-size: 100MB" >> src/main/resources/application.properties
          echo "google.api.key=${{ secrets.GOOGLE_API_KEY }}" >> src/main/resources/application.properties
          echo "jwt.secret=${{ secrets.JWT_SECRET }}" >> src/main/resources/application.properties
          echo "kakao.pay.admin-key=${{ secrets.KAKAO_PAY_ADMIN_KEY }}" >> src/main/resources/application.properties
          echo "kakao.pay.ready-url=https://kapi.kakao.com/v1/payment/ready" >> src/main/resources/application.properties
          echo "kakao.pay.approve-url=https://kapi.kakao.com/v1/payment/approve" >> src/main/resources/application.properties
          echo "kakao.pay.cid=TC0ONETIME" >> src/main/resources/application.properties
          echo "cloud.aws.credentials.accessKey=${{ secrets.CLOUD_AWS_CREDENTIALS_ACCESSKEY }}" >> src/main/resources/application.properties
          echo "cloud.aws.credentials.secretKey=${{ secrets.CLOUD_AWS_CREDENTIALS_SECRETKEY }}" >> src/main/resources/application.properties
          echo "cloud.aws.s3.bucket=ssackthree" >> src/main/resources/application.properties
          echo "cloud.aws.region.static=ap-northeast-2" >> src/main/resources/application.properties
          echo "cloud.aws.stack.auto-=false" >> src/main/resources/application.properties
          echo "logging.level.org.springframework.web.multipart.support=ERROR" >> src/main/resources/application.properties

      - name: Build JAR with application.properties
        run: ./gradlew bootJar
        shell: bash

      - name: Build Docker image
        run: docker build -t lmj174/ssackthree:1.0 .
        shell: bash

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: docker push lmj174/ssackthree:1.0
        shell: bash
